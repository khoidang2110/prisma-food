model like_res {
  user users @relation(fields: [user_id], references: [id])

  user_id   Int
  res       restaurant @relation(fields: [res_id], references: [id])
  res_id    Int
  date_like DateTime?  @db.Date

  @@id([user_id, res_id])
}



model restaurant {
  id       Int        @id @default(autoincrement())
  res_name String?    @db.VarChar(100)
  image    String?    @db.VarChar(255)
  decs     String?    @db.VarChar(255)
  users    like_res[]
  rate_res rate_res[]
}

model users {
  id          Int          @id @default(autoincrement())
  full_name   String?      @db.VarChar(100)
  email       String?      @db.VarChar(225)
  pass_word   String?      @db.VarChar(255)
  restaurants like_res[]
  rate_res    rate_res[]
  order_food  order_food[]
}

model food {
  id         Int          @id @default(autoincrement())
  food_name  String?      @db.VarChar(100)
  image      String?      @db.VarChar(255)
  price      String?      @db.VarChar(255)
  decs       String?      @db.VarChar(255)
  type_id    Int?
  food_type  food_type?   @relation(fields: [type_id], references: [type_id], onDelete: NoAction, onUpdate: NoAction, map: "food_ibfk_1")
  order_food order_food[]
  sub_food   sub_food[]

  @@index([type_id], map: "type_id")
}

model food_type {
  type_id   Int     @id @default(autoincrement())
  type_name String? @db.VarChar(100)
  food      food[]
}

model rate_res {
  user      users      @relation(fields: [user_id], references: [id])
  user_id   Int
  res       restaurant @relation(fields: [res_id], references: [id])
  res_id    Int
  amount    Int?
  date_rate DateTime?  @db.Date

  @@id([user_id, res_id])
}


model order_food {
 user      users   @relation(fields: [user_id], references: [id])
  user_id    Int
  food       food    @relation(fields: [food_id], references: [id])
  food_id    Int
  amount     Int?
  code       String? @db.VarChar(255)
  arr_sub_id String? @db.VarChar(255)

 

  @@id([user_id, food_id])
}

model sub_food {
  sub_id    Int     @id @default(autoincrement())
  sub_name  String? @db.VarChar(255)
  sub_price Float?  @db.Float
  food_id   Int?
  food      food?   @relation(fields: [food_id], references: [id], onDelete: Restrict)

  @@index([food_id], map: "sub_food_food_id_fkey")
}
